{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst XLSX = require('xlsx');\nconst csv = require('csv-parser');\nconst fs = require('fs');\nconst path = require('path');\nconst cors = require('cors');\nconst {\n  MongoClient\n} = require('mongodb');\nconst app = express();\nconst PORT = 5000;\nconst MONGO_URI = \"mongodb://127.0.0.1:27017\";\nconst DB_NAME = \"dashboard_db\";\nlet db;\n\n// MongoDB Connection\nMongoClient.connect(MONGO_URI, {\n  useUnifiedTopology: true\n}).then(client => {\n  db = client.db(DB_NAME);\n  console.log(\"‚úÖ Connected to MongoDB\");\n}).catch(err => {\n  console.error(\"‚ùå MongoDB connection failed:\", err);\n});\napp.use(cors());\napp.use(express.json());\nconst upload = multer({\n  dest: 'uploads/'\n});\nconst statusList = [\"all\", \"rto\", \"door_step_exchanged\", \"delivered\", \"cancelled\", \"ready_to_ship\", \"shipped\", \"supplier_listed_price\", \"supplier_discounted_price\"];\n\n// ‚úÖ Helper Functions\nfunction parsePrice(value) {\n  if (!value) return 0;\n  let clean = value.toString().trim().replace(/[^0-9.\\-]/g, '');\n  return parseFloat(clean) || 0;\n}\nfunction getColumnValue(row, possibleNames) {\n  const keys = Object.keys(row).map(k => k.toLowerCase().trim());\n  for (let name of possibleNames) {\n    let idx = keys.indexOf(name.toLowerCase().trim());\n    if (idx !== -1) return row[Object.keys(row)[idx]];\n  }\n  return 0;\n}\nfunction categorizeRows(rows) {\n  const categories = {};\n  statusList.forEach(status => categories[status] = []);\n  categories.other = [];\n  let totalSupplierListedPrice = 0;\n  let totalSupplierDiscountedPrice = 0;\n  let sellInMonthProducts = 0;\n  let totalProfit = 0;\n  let deliveredSupplierDiscountedPriceTotal = 0;\n  rows.forEach(row => {\n    const status = (row['Reason for Credit Entry'] || '').toLowerCase().trim();\n    categories[\"all\"].push(row);\n    const listedPrice = parsePrice(getColumnValue(row, ['Supplier Listed Price (Incl. GST + Commission)', 'Supplier Listed Price', 'Listed Price']));\n    const discountedPrice = parsePrice(getColumnValue(row, ['Supplier Discounted Price (Incl GST and Commission)', 'Supplier Discounted Price (Incl GST and Commision)', 'Supplier Discounted Price', 'Discounted Price']));\n    totalSupplierListedPrice += listedPrice;\n    totalSupplierDiscountedPrice += discountedPrice;\n    totalProfit += listedPrice - discountedPrice;\n    if (status.includes('delivered')) {\n      sellInMonthProducts += 1;\n      deliveredSupplierDiscountedPriceTotal += discountedPrice;\n    }\n    let matched = false;\n    if (status.includes('rto_complete') || status.includes('rto_locked') || status.includes('rto_initiated')) {\n      categories[\"rto\"].push(row);\n      matched = true;\n    } else {\n      statusList.forEach(s => {\n        if (s !== \"all\" && s !== \"rto\" && status.includes(s)) {\n          categories[s].push(row);\n          matched = true;\n        }\n      });\n    }\n    if (!matched) categories.other.push(row);\n  });\n  categories.totals = {\n    totalSupplierListedPrice,\n    totalSupplierDiscountedPrice,\n    sellInMonthProducts,\n    totalProfit,\n    deliveredSupplierDiscountedPriceTotal\n  };\n  return categories;\n}\n\n// ‚úÖ Upload Endpoint\napp.post('/upload', upload.single('file'), async (req, res) => {\n  const file = req.file;\n  if (!file) return res.status(400).json({\n    error: 'No file uploaded'\n  });\n  const ext = path.extname(file.originalname).toLowerCase();\n  let rows = [];\n  try {\n    if (ext === '.csv') {\n      rows = [];\n      fs.createReadStream(file.path).pipe(csv()).on('data', data => rows.push(data)).on('end', async () => {\n        fs.unlinkSync(file.path);\n        await saveToDB(rows, res);\n      });\n    } else if (ext === '.xlsx' || ext === '.xls') {\n      const workbook = XLSX.readFile(file.path);\n      const sheetName = workbook.SheetNames[0];\n      rows = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n      fs.unlinkSync(file.path);\n      await saveToDB(rows, res);\n    } else {\n      fs.unlinkSync(file.path);\n      return res.status(400).json({\n        error: 'Unsupported file format'\n      });\n    }\n  } catch (error) {\n    console.error(\"‚ùå Error processing file:\", error);\n    return res.status(500).json({\n      error: 'Failed to process file'\n    });\n  }\n});\n\n// ‚úÖ Save to MongoDB\nasync function saveToDB(rows, res) {\n  if (!db) return res.status(500).json({\n    message: \"MongoDB not connected yet\"\n  });\n  if (!rows || !rows.length) return res.status(400).json({\n    message: \"No data to save\"\n  });\n  const categorized = categorizeRows(rows);\n  try {\n    await db.collection(\"dashboard_data\").insertOne({\n      submittedAt: new Date(),\n      data: rows,\n      totals: categorized.totals\n    });\n    console.log(\"‚úÖ Uploaded data inserted into MongoDB\");\n    return res.json(categorized);\n  } catch (error) {\n    console.error(\"‚ùå Error saving uploaded data to MongoDB:\", error);\n    return res.status(500).json({\n      message: \"Failed to save data to MongoDB\"\n    });\n  }\n}\n\n// ‚úÖ Fixed Filter Endpoint\napp.get('/filter/:subOrderNo', async (req, res) => {\n  const subOrderNo = req.params.subOrderNo.trim().toLowerCase();\n  if (!subOrderNo) return res.status(400).json({\n    error: \"Sub Order No required\"\n  });\n  try {\n    // Get latest uploaded data\n    const result = await db.collection(\"dashboard_data\").find().sort({\n      submittedAt: -1\n    }).limit(1).toArray();\n    if (!result.length) return res.status(404).json({\n      error: \"No data found\"\n    });\n    const rows = result[0].data;\n\n    // Try to find row where Sub Order No matches\n    const match = rows.find(row => {\n      // Look for possible \"sub order no\" column first\n      const keys = Object.keys(row).map(k => k.toLowerCase());\n      const subOrderKey = keys.find(k => k.includes(\"sub\") && k.includes(\"order\"));\n      if (subOrderKey && row[subOrderKey] && row[subOrderKey].toString().trim().toLowerCase() === subOrderNo) {\n        return true;\n      }\n\n      // Fallback: search all values\n      return Object.values(row).some(v => v && v.toString().trim().toLowerCase() === subOrderNo);\n    });\n    if (!match) return res.status(404).json({\n      error: \"Sub Order No not found\"\n    });\n\n    // Extract prices\n    const listedPrice = parsePrice(getColumnValue(match, ['Supplier Listed Price (Incl. GST + Commission)', 'Supplier Listed Price', 'Listed Price']));\n    const discountedPrice = parsePrice(getColumnValue(match, ['Supplier Discounted Price (Incl GST and Commission)', 'Supplier Discounted Price (Incl GST and Commision)', 'Supplier Discounted Price', 'Discounted Price']));\n    res.json({\n      subOrderNo,\n      listedPrice,\n      discountedPrice,\n      profit: listedPrice - discountedPrice\n    });\n  } catch (err) {\n    console.error(\"‚ùå Filter error:\", err);\n    res.status(500).json({\n      error: \"Internal server error\"\n    });\n  }\n});\n\n// ‚úÖ Profit Calculation\napp.post('/calculate', (req, res) => {\n  const {\n    listedPrice,\n    discountedPrice\n  } = req.body;\n  if (listedPrice === undefined || discountedPrice === undefined) return res.status(400).json({\n    error: 'Both prices are required'\n  });\n  const profit = listedPrice - discountedPrice;\n  const profitPercent = discountedPrice !== 0 ? profit / discountedPrice * 100 : 0;\n  res.json({\n    profit,\n    profitPercent: profitPercent.toFixed(2)\n  });\n});\n\n// ‚úÖ Start Server\napp.listen(PORT, () => console.log(`üöÄ Server running on http://localhost:${PORT}`));","map":{"version":3,"names":["express","require","multer","XLSX","csv","fs","path","cors","MongoClient","app","PORT","MONGO_URI","DB_NAME","db","connect","useUnifiedTopology","then","client","console","log","catch","err","error","use","json","upload","dest","statusList","parsePrice","value","clean","toString","trim","replace","parseFloat","getColumnValue","row","possibleNames","keys","Object","map","k","toLowerCase","name","idx","indexOf","categorizeRows","rows","categories","forEach","status","other","totalSupplierListedPrice","totalSupplierDiscountedPrice","sellInMonthProducts","totalProfit","deliveredSupplierDiscountedPriceTotal","push","listedPrice","discountedPrice","includes","matched","s","totals","post","single","req","res","file","ext","extname","originalname","createReadStream","pipe","on","data","unlinkSync","saveToDB","workbook","readFile","sheetName","SheetNames","utils","sheet_to_json","Sheets","message","length","categorized","collection","insertOne","submittedAt","Date","get","subOrderNo","params","result","find","sort","limit","toArray","match","subOrderKey","values","some","v","profit","body","undefined","profitPercent","toFixed","listen"],"sources":["C:/Users/Avinash/OneDrive/Desktop/excel/Frontend/frontend/src/Components/Excel.js"],"sourcesContent":["const express = require('express');\r\nconst multer = require('multer');\r\nconst XLSX = require('xlsx');\r\nconst csv = require('csv-parser');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst cors = require('cors');\r\nconst { MongoClient } = require('mongodb');\r\n\r\nconst app = express();\r\nconst PORT = 5000;\r\n\r\nconst MONGO_URI = \"mongodb://127.0.0.1:27017\";\r\nconst DB_NAME = \"dashboard_db\";\r\nlet db;\r\n\r\n// MongoDB Connection\r\nMongoClient.connect(MONGO_URI, { useUnifiedTopology: true })\r\n  .then(client => {\r\n    db = client.db(DB_NAME);\r\n    console.log(\"‚úÖ Connected to MongoDB\");\r\n  })\r\n  .catch(err => {\r\n    console.error(\"‚ùå MongoDB connection failed:\", err);\r\n  });\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst upload = multer({ dest: 'uploads/' });\r\n\r\nconst statusList = [\r\n  \"all\",\r\n  \"rto\",\r\n  \"door_step_exchanged\",\r\n  \"delivered\",\r\n  \"cancelled\",\r\n  \"ready_to_ship\",\r\n  \"shipped\",\r\n  \"supplier_listed_price\",\r\n  \"supplier_discounted_price\"\r\n];\r\n\r\n// ‚úÖ Helper Functions\r\nfunction parsePrice(value) {\r\n  if (!value) return 0;\r\n  let clean = value.toString().trim().replace(/[^0-9.\\-]/g, '');\r\n  return parseFloat(clean) || 0;\r\n}\r\n\r\nfunction getColumnValue(row, possibleNames) {\r\n  const keys = Object.keys(row).map(k => k.toLowerCase().trim());\r\n  for (let name of possibleNames) {\r\n    let idx = keys.indexOf(name.toLowerCase().trim());\r\n    if (idx !== -1) return row[Object.keys(row)[idx]];\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction categorizeRows(rows) {\r\n  const categories = {};\r\n  statusList.forEach(status => categories[status] = []);\r\n  categories.other = [];\r\n\r\n  let totalSupplierListedPrice = 0;\r\n  let totalSupplierDiscountedPrice = 0;\r\n  let sellInMonthProducts = 0;\r\n  let totalProfit = 0;\r\n  let deliveredSupplierDiscountedPriceTotal = 0;\r\n\r\n  rows.forEach(row => {\r\n    const status = (row['Reason for Credit Entry'] || '').toLowerCase().trim();\r\n    categories[\"all\"].push(row);\r\n\r\n    const listedPrice = parsePrice(getColumnValue(row, [\r\n      'Supplier Listed Price (Incl. GST + Commission)',\r\n      'Supplier Listed Price',\r\n      'Listed Price'\r\n    ]));\r\n    const discountedPrice = parsePrice(getColumnValue(row, [\r\n      'Supplier Discounted Price (Incl GST and Commission)',\r\n      'Supplier Discounted Price (Incl GST and Commision)',\r\n      'Supplier Discounted Price',\r\n      'Discounted Price'\r\n    ]));\r\n\r\n    totalSupplierListedPrice += listedPrice;\r\n    totalSupplierDiscountedPrice += discountedPrice;\r\n    totalProfit += listedPrice - discountedPrice;\r\n\r\n    if (status.includes('delivered')) {\r\n      sellInMonthProducts += 1;\r\n      deliveredSupplierDiscountedPriceTotal += discountedPrice;\r\n    }\r\n\r\n    let matched = false;\r\n    if (status.includes('rto_complete') || status.includes('rto_locked') || status.includes('rto_initiated')) {\r\n      categories[\"rto\"].push(row);\r\n      matched = true;\r\n    } else {\r\n      statusList.forEach(s => {\r\n        if (s !== \"all\" && s !== \"rto\" && status.includes(s)) {\r\n          categories[s].push(row);\r\n          matched = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!matched) categories.other.push(row);\r\n  });\r\n\r\n  categories.totals = {\r\n    totalSupplierListedPrice,\r\n    totalSupplierDiscountedPrice,\r\n    sellInMonthProducts,\r\n    totalProfit,\r\n    deliveredSupplierDiscountedPriceTotal\r\n  };\r\n\r\n  return categories;\r\n}\r\n\r\n// ‚úÖ Upload Endpoint\r\napp.post('/upload', upload.single('file'), async (req, res) => {\r\n  const file = req.file;\r\n  if (!file) return res.status(400).json({ error: 'No file uploaded' });\r\n\r\n  const ext = path.extname(file.originalname).toLowerCase();\r\n  let rows = [];\r\n\r\n  try {\r\n    if (ext === '.csv') {\r\n      rows = [];\r\n      fs.createReadStream(file.path)\r\n        .pipe(csv())\r\n        .on('data', data => rows.push(data))\r\n        .on('end', async () => {\r\n          fs.unlinkSync(file.path);\r\n          await saveToDB(rows, res);\r\n        });\r\n    } else if (ext === '.xlsx' || ext === '.xls') {\r\n      const workbook = XLSX.readFile(file.path);\r\n      const sheetName = workbook.SheetNames[0];\r\n      rows = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n      fs.unlinkSync(file.path);\r\n      await saveToDB(rows, res);\r\n    } else {\r\n      fs.unlinkSync(file.path);\r\n      return res.status(400).json({ error: 'Unsupported file format' });\r\n    }\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error processing file:\", error);\r\n    return res.status(500).json({ error: 'Failed to process file' });\r\n  }\r\n});\r\n\r\n// ‚úÖ Save to MongoDB\r\nasync function saveToDB(rows, res) {\r\n  if (!db) return res.status(500).json({ message: \"MongoDB not connected yet\" });\r\n  if (!rows || !rows.length) return res.status(400).json({ message: \"No data to save\" });\r\n\r\n  const categorized = categorizeRows(rows);\r\n\r\n  try {\r\n    await db.collection(\"dashboard_data\").insertOne({\r\n      submittedAt: new Date(),\r\n      data: rows,\r\n      totals: categorized.totals\r\n    });\r\n    console.log(\"‚úÖ Uploaded data inserted into MongoDB\");\r\n    return res.json(categorized);\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error saving uploaded data to MongoDB:\", error);\r\n    return res.status(500).json({ message: \"Failed to save data to MongoDB\" });\r\n  }\r\n}\r\n\r\n// ‚úÖ Fixed Filter Endpoint\r\napp.get('/filter/:subOrderNo', async (req, res) => {\r\n  const subOrderNo = req.params.subOrderNo.trim().toLowerCase();\r\n  if (!subOrderNo) return res.status(400).json({ error: \"Sub Order No required\" });\r\n\r\n  try {\r\n    // Get latest uploaded data\r\n    const result = await db.collection(\"dashboard_data\")\r\n      .find()\r\n      .sort({ submittedAt: -1 })\r\n      .limit(1)\r\n      .toArray();\r\n\r\n    if (!result.length) return res.status(404).json({ error: \"No data found\" });\r\n\r\n    const rows = result[0].data;\r\n\r\n    // Try to find row where Sub Order No matches\r\n    const match = rows.find(row => {\r\n      // Look for possible \"sub order no\" column first\r\n      const keys = Object.keys(row).map(k => k.toLowerCase());\r\n      const subOrderKey = keys.find(k => k.includes(\"sub\") && k.includes(\"order\"));\r\n      if (subOrderKey && row[subOrderKey] &&\r\n        row[subOrderKey].toString().trim().toLowerCase() === subOrderNo) {\r\n        return true;\r\n      }\r\n\r\n      // Fallback: search all values\r\n      return Object.values(row).some(v =>\r\n        v && v.toString().trim().toLowerCase() === subOrderNo\r\n      );\r\n    });\r\n\r\n    if (!match) return res.status(404).json({ error: \"Sub Order No not found\" });\r\n\r\n    // Extract prices\r\n    const listedPrice = parsePrice(getColumnValue(match, [\r\n      'Supplier Listed Price (Incl. GST + Commission)',\r\n      'Supplier Listed Price',\r\n      'Listed Price'\r\n    ]));\r\n\r\n    const discountedPrice = parsePrice(getColumnValue(match, [\r\n      'Supplier Discounted Price (Incl GST and Commission)',\r\n      'Supplier Discounted Price (Incl GST and Commision)',\r\n      'Supplier Discounted Price',\r\n      'Discounted Price'\r\n    ]));\r\n\r\n    res.json({\r\n      subOrderNo,\r\n      listedPrice,\r\n      discountedPrice,\r\n      profit: listedPrice - discountedPrice\r\n    });\r\n\r\n  } catch (err) {\r\n    console.error(\"‚ùå Filter error:\", err);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\n// ‚úÖ Profit Calculation\r\napp.post('/calculate', (req, res) => {\r\n  const { listedPrice, discountedPrice } = req.body;\r\n  if (listedPrice === undefined || discountedPrice === undefined)\r\n    return res.status(400).json({ error: 'Both prices are required' });\r\n\r\n  const profit = listedPrice - discountedPrice;\r\n  const profitPercent = discountedPrice !== 0 ? (profit / discountedPrice) * 100 : 0;\r\n  res.json({ profit, profitPercent: profitPercent.toFixed(2) });\r\n});\r\n\r\n// ‚úÖ Start Server\r\napp.listen(PORT, () => console.log(`üöÄ Server running on http://localhost:${PORT}`));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}