{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst XLSX = require('xlsx');\nconst csv = require('csv-parser');\nconst fs = require('fs');\nconst path = require('path');\nconst cors = require('cors');\nconst app = express();\nconst PORT = 5000;\napp.use(cors());\nconst upload = multer({\n  dest: 'uploads/'\n});\nfunction categorizeRows(rows) {\n  const categories = {\n    delivered: [],\n    pending: [],\n    rto: [],\n    return: [],\n    shipped: [],\n    cancel: [],\n    other: []\n  };\n  rows.forEach(row => {\n    const statusKey = Object.keys(row).find(key => key.toLowerCase().includes('status'));\n    const status = (row[statusKey] || '').toLowerCase().trim();\n    if (status.includes('delivered')) categories.delivered.push(row);else if (status.includes('pending')) categories.pending.push(row);else if (status.includes('rto')) categories.rto.push(row);else if (status.includes('return')) categories.return.push(row);else if (status.includes('shipped')) categories.shipped.push(row);else if (status.includes('cancel')) categories.cancel.push(row);else categories.other.push(row);\n  });\n  return categories;\n}\napp.post('/upload', upload.single('file'), (req, res) => {\n  const file = req.file;\n  const ext = path.extname(file.originalname).toLowerCase();\n  if (!file) {\n    return res.status(400).json({\n      error: 'No file uploaded'\n    });\n  }\n  if (ext === '.csv') {\n    const results = [];\n    fs.createReadStream(file.path).pipe(csv()).on('data', data => results.push(data)).on('end', () => {\n      fs.unlinkSync(file.path);\n      const categorized = categorizeRows(results);\n      res.json(categorized);\n    });\n  } else if (ext === '.xlsx' || ext === '.xls') {\n    const workbook = XLSX.readFile(file.path);\n    const sheetName = workbook.SheetNames[0];\n    const jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n    fs.unlinkSync(file.path);\n    const categorized = categorizeRows(jsonData);\n    res.json(categorized);\n  } else {\n    fs.unlinkSync(file.path);\n    res.status(400).json({\n      error: 'Unsupported file format'\n    });\n  }\n});\napp.listen(PORT, () => {\n  console.log(`✅ Server running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","multer","XLSX","csv","fs","path","cors","app","PORT","use","upload","dest","categorizeRows","rows","categories","delivered","pending","rto","return","shipped","cancel","other","forEach","row","statusKey","Object","keys","find","key","toLowerCase","includes","status","trim","push","post","single","req","res","file","ext","extname","originalname","json","error","results","createReadStream","pipe","on","data","unlinkSync","categorized","workbook","readFile","sheetName","SheetNames","jsonData","utils","sheet_to_json","Sheets","listen","console","log"],"sources":["C:/Users/Avinash/OneDrive/Desktop/excel/Frontend/frontend/src/Components/Excel.js"],"sourcesContent":["const express = require('express');\r\nconst multer = require('multer');\r\nconst XLSX = require('xlsx');\r\nconst csv = require('csv-parser');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\nconst PORT = 5000;\r\n\r\napp.use(cors());\r\nconst upload = multer({ dest: 'uploads/' });\r\n\r\n\r\nfunction categorizeRows(rows) {\r\n  const categories = {\r\n    delivered: [],\r\n    pending: [],\r\n    rto: [],\r\n    return: [],\r\n    shipped: [],\r\n    cancel: [],\r\n    other: [],\r\n  };\r\n\r\n  rows.forEach(row => {\r\n    \r\n    const statusKey = Object.keys(row).find(\r\n      key => key.toLowerCase().includes('status')\r\n    );\r\n\r\n    const status = (row[statusKey] || '').toLowerCase().trim();\r\n\r\n    if (status.includes('delivered')) categories.delivered.push(row);\r\n    else if (status.includes('pending')) categories.pending.push(row);\r\n    else if (status.includes('rto')) categories.rto.push(row);\r\n    else if (status.includes('return')) categories.return.push(row);\r\n    else if (status.includes('shipped')) categories.shipped.push(row);\r\n    else if (status.includes('cancel')) categories.cancel.push(row);\r\n    else categories.other.push(row);\r\n  });\r\n\r\n  return categories;\r\n}\r\n\r\n\r\napp.post('/upload', upload.single('file'), (req, res) => {\r\n  const file = req.file;\r\n  const ext = path.extname(file.originalname).toLowerCase();\r\n\r\n  if (!file) {\r\n    return res.status(400).json({ error: 'No file uploaded' });\r\n  }\r\n\r\n  if (ext === '.csv') {\r\n    const results = [];\r\n\r\n    fs.createReadStream(file.path)\r\n      .pipe(csv())\r\n      .on('data', (data) => results.push(data))\r\n      .on('end', () => {\r\n        fs.unlinkSync(file.path); \r\n        const categorized = categorizeRows(results);\r\n        res.json(categorized);\r\n      });\r\n\r\n  } else if (ext === '.xlsx' || ext === '.xls') {\r\n    const workbook = XLSX.readFile(file.path);\r\n    const sheetName = workbook.SheetNames[0];\r\n    const jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n    fs.unlinkSync(file.path); \r\n    const categorized = categorizeRows(jsonData);\r\n    res.json(categorized);\r\n  } else {\r\n    fs.unlinkSync(file.path);\r\n    res.status(400).json({ error: 'Unsupported file format' });\r\n  }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`✅ Server running on http://localhost:${PORT}`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}