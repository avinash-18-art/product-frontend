{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst cors = require('cors');\nconst path = require('path');\nconst fs = require('fs');\nconst xlsx = require('xlsx');\nconst app = express();\napp.use(cors());\napp.use(express.json());\nconst upload = multer({\n  dest: 'uploads/'\n});\napp.post('/upload', upload.single('excel'), (req, res) => {\n  const filePath = req.file.path;\n  try {\n    const workbook = xlsx.readFile(filePath);\n    const sheetName = workbook.SheetNames[0];\n    const data = xlsx.utils.sheet_to_json(workbook.Sheets[sheetName]);\n    const categorized = {\n      delivered: [],\n      rto: [],\n      return: [],\n      shipped: [],\n      DOOR_STEP_EXCHANGED: [],\n      unknown: []\n    };\n    data.forEach(item => {\n      var _item$status;\n      const status = ((_item$status = item.status) === null || _item$status === void 0 ? void 0 : _item$status.toLowerCase()) || '';\n      if (status.includes('delivered')) categorized.delivered.push(item);else if (status.includes('rto')) categorized.rto.push(item);else if (status.includes('return')) categorized.return.push(item);else if (status.includes('shipped')) categorized.shipped.push(item);else if (status.includes('door_step_exchanged') || status.includes('buy')) categorized.DOOR_STEP_EXCHANGED.push(item);else categorized.unknown.push(item);\n    });\n    fs.unlinkSync(filePath); // Delete uploaded file after processing\n\n    res.json(categorized);\n  } catch (error) {\n    console.error('Error reading Excel file:', error);\n    res.status(500).json({\n      error: 'Failed to process the uploaded Excel file.'\n    });\n  }\n});\napp.listen(5000, () => {\n  console.log('Server is running on port 5000');\n});","map":{"version":3,"names":["express","require","multer","cors","path","fs","xlsx","app","use","json","upload","dest","post","single","req","res","filePath","file","workbook","readFile","sheetName","SheetNames","data","utils","sheet_to_json","Sheets","categorized","delivered","rto","return","shipped","DOOR_STEP_EXCHANGED","unknown","forEach","item","_item$status","status","toLowerCase","includes","push","unlinkSync","error","console","listen","log"],"sources":["C:/Users/Avinash/OneDrive/Desktop/excel/Frontend/frontend/src/Components/Excel.js"],"sourcesContent":["const express = require('express');\r\nconst multer = require('multer');\r\nconst cors = require('cors');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst xlsx = require('xlsx');\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst upload = multer({ dest: 'uploads/' });\r\n\r\napp.post('/upload', upload.single('excel'), (req, res) => {\r\n  const filePath = req.file.path;\r\n\r\n  try {\r\n    const workbook = xlsx.readFile(filePath);\r\n    const sheetName = workbook.SheetNames[0];\r\n    const data = xlsx.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n\r\n    const categorized = {\r\n      delivered: [],\r\n      rto: [],\r\n      return: [],\r\n      shipped: [],\r\n      DOOR_STEP_EXCHANGED: [],\r\n      unknown: [],\r\n    };\r\n\r\n    data.forEach((item) => {\r\n      const status = item.status?.toLowerCase() || '';\r\n\r\n      if (status.includes('delivered')) categorized.delivered.push(item);\r\n      else if (status.includes('rto')) categorized.rto.push(item);\r\n      else if (status.includes('return')) categorized.return.push(item);\r\n      else if (status.includes('shipped')) categorized.shipped.push(item);\r\n      else if (status.includes('door_step_exchanged') || status.includes('buy')) categorized.DOOR_STEP_EXCHANGED.push(item);\r\n      else categorized.unknown.push(item);\r\n    });\r\n\r\n    fs.unlinkSync(filePath); // Delete uploaded file after processing\r\n\r\n    res.json(categorized);\r\n  } catch (error) {\r\n    console.error('Error reading Excel file:', error);\r\n    res.status(500).json({ error: 'Failed to process the uploaded Excel file.' });\r\n  }\r\n});\r\n\r\napp.listen(5000, () => {\r\n  console.log('Server is running on port 5000');\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}