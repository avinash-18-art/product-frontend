{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avinash\\\\OneDrive\\\\Desktop\\\\excel\\\\Frontend\\\\frontend\\\\src\\\\Components\\\\Excel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Ex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [statusCounts, setStatusCounts] = useState(null);\n  const [error, setError] = useState('');\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      const categories = res.data;\n\n      // Include all statuses, even if their count is 0\n      const allStatuses = ['delivered', 'rto', 'return', 'shipped', 'cancel', 'other'];\n      const counts = {};\n      allStatuses.forEach(status => {\n        var _categories$status;\n        counts[status] = ((_categories$status = categories[status]) === null || _categories$status === void 0 ? void 0 : _categories$status.length) || 0;\n      });\n      setStatusCounts(counts);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Upload failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Status Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv, .xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), statusCounts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: Object.entries(statusCounts).map(([status, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: status.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"okwPJOu/6DpN1mT55qeEKDusbEs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","statusCounts","setStatusCounts","error","setError","handleFileUpload","e","file","target","files","formData","FormData","append","res","post","categories","data","allStatuses","counts","forEach","status","_categories$status","length","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","Object","entries","map","count","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Avinash/OneDrive/Desktop/excel/Frontend/frontend/src/Components/Excel.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Ex.css';\r\n\r\nfunction App() {\r\n  const [statusCounts, setStatusCounts] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload', formData);\r\n      const categories = res.data;\r\n\r\n      // Include all statuses, even if their count is 0\r\n      const allStatuses = ['delivered', 'rto', 'return', 'shipped', 'cancel', 'other'];\r\n      const counts = {};\r\n\r\n      allStatuses.forEach(status => {\r\n        counts[status] = categories[status]?.length || 0;\r\n      });\r\n\r\n      setStatusCounts(counts);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Upload failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Product Status Dashboard</h1>\r\n\r\n      <input type=\"file\" accept=\".csv, .xlsx, .xls\" onChange={handleFileUpload} />\r\n      \r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {statusCounts && (\r\n        <div className=\"dashboard\">\r\n          {Object.entries(statusCounts).map(([status, count]) => (\r\n            <div key={status} className=\"card\">\r\n              <h3>{status.toUpperCase()}</h3>\r\n              <p>{count}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}